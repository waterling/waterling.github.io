{"version":3,"sources":["containers/LeftMenu/LeftMenu.module.scss","containers/SignIn/LoginForm.module.scss","components/StaticForm/StaticForm.module.scss","components/BasicComponents/Form/Form.module.scss","components/BasicComponents/Input/Input.module.scss","containers/Profile/Profile.module.scss","containers/Routes/AuthPages.module.scss","containers/SignIn/SignIn.module.scss","components/icons/logo.svg","components/Navigation/Navigation.module.scss","helpers/utils/storage/LocalStorage.ts","helpers/utils/storage/TokenStorage.ts","api/helpers/BaseApiClient.ts","api/config.ts","api/user/User.ts","store/models/user/index.ts","api/auth/Auth.ts","store/models/auth/index.ts","store/index.ts","components/BasicComponents/Form/Form.tsx","components/BasicComponents/Input/Input.tsx","components/BasicComponents/Button/Button.tsx","containers/SignIn/LoginForm.tsx","containers/SignIn/SignIn.tsx","containers/Routes/PrivateRoute.tsx","components/StaticForm/StaticForm.tsx","containers/Profile/Profile.tsx","components/Navigation/Navigation.tsx","containers/LeftMenu/LeftMenu.tsx","containers/Routes/AuthPages.tsx","containers/Routes/UnAuthorizeRoute.tsx","containers/Main/Main.tsx","index.tsx"],"names":["module","exports","storage","save","key","value","setItem","get","getItem","remove","removeItem","clear","this","localStorage","tokenKey","refreshTokenKey","set","token","LocalStorage","accessToken","refreshToken","baseURL","axios","refreshing","failedRequests","setToken","config","newConfig","headers","TokenStorage","checkAuthFailed","error","response","status","timeoutErrorMessage","window","history","pushState","Promise","reject","handleUnAuthorize","a","originalRequest","resolve","push","then","catch","err","params","refresh","data","processFailedRequests","forEach","prom","create","interceptors","request","use","f","fetchProfile","BaseApiClient","result","user","createModel","state","profile","reducers","setProfile","effects","dispatch","User","login","post","auth","Auth","store","init","models","Form","title","className","props","styles","container","children","Input","label","input","Button","LoginForm","onSubmit","useState","email","setEmail","password","setPassword","e","preventDefault","loginForm","type","row","onChange","useMemo","target","cx","submitButton","connect","handleLogin","form","signInPage","PrivateRoute","to","StaticForm","isGrid","isRows","containerClassName","table","grid","rows","map","item","i","defaultProps","PROFILE_FIELDS","field","testProjectsData","profileData","projects","Navigation","navigation","links","link","url","activeClassName","chosenClassName","menu","topPart","logoContainer","src","logo","alt","userInfo","name","firstName","lastName","chosen","useEffect","authPage","content","path","exact","from","UnAuthorizeRoute","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8773437a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"LeftMenu_menu__3snqN\",\"chosen\":\"LeftMenu_chosen__13_Nd\",\"topPart\":\"LeftMenu_topPart__1wjTJ\",\"logoContainer\":\"LeftMenu_logoContainer__CwqKo\",\"userInfo\":\"LeftMenu_userInfo__6tKUH\",\"name\":\"LeftMenu_name__3yaYJ\",\"email\":\"LeftMenu_email__Yuxpe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"LoginForm_loginForm__20xLY\",\"submitButton\":\"LoginForm_submitButton__QJo2z\",\"row\":\"LoginForm_row__33q9m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"StaticForm_title__2_HQ3\",\"table\":\"StaticForm_table__2p_L-\",\"grid\":\"StaticForm_grid__33g49\",\"rows\":\"StaticForm_rows__Zzf7_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container__3NLU8\",\"title\":\"Form_title__2VTqt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2A8Uu\",\"label\":\"Input_label__2tSvc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projects\":\"Profile_projects__3zpcA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authPage\":\"AuthPages_authPage__1zYCf\",\"content\":\"AuthPages_content__1bZ-O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signInPage\":\"SignIn_signInPage__XmOQv\"};","module.exports = __webpack_public_path__ + \"static/media/logo.69ac13d9.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__1EgxP\"};","class LocalStorage {\n    storage: Storage;\n    constructor(storage: Storage,) {\n        this.storage = storage;\n    }\n\n    save = (key: string, value: string) => {\n        this.storage.setItem(key, value);\n    };\n\n    get = (key: string): string | null => {\n        return this.storage.getItem(key);\n    };\n\n\n    remove = (key: string) => {\n        this.storage.removeItem(key);\n    };\n\n\n    clear = () => {\n        this.storage.clear();\n    };\n}\n\nexport default new LocalStorage(localStorage);\n","import LocalStorage from './LocalStorage';\nimport { IAuthToken } from '../../../api/auth/interfaces';\n\nclass TokenStorage {\n    tokenKey: string = 'token';\n    refreshTokenKey: string = 'rtk';\n\n    set = (token: IAuthToken) => {\n        LocalStorage.save(this.tokenKey, token.accessToken);\n        LocalStorage.save(this.refreshTokenKey,  token.refreshToken);\n    };\n\n    get accessToken (): string | null {\n        return LocalStorage.get(this.tokenKey);\n    };\n\n    get refreshToken (): string | null {\n        return LocalStorage.get(this.refreshTokenKey);\n    };\n\n    clear = () => {\n        LocalStorage.remove(this.tokenKey);\n        LocalStorage.remove(this.refreshTokenKey);\n    };\n}\n\nexport default new TokenStorage();\n","import TokenStorage from '../../helpers/utils/storage/TokenStorage';\nimport axios, { AxiosInstance, AxiosRequestConfig, AxiosError } from 'axios';\nimport config from '../config';\n\nclass BaseApiClient {\n    axios: AxiosInstance;\n    refreshing: boolean = false;\n    failedRequests: FailedRequest[] = [];\n\n    constructor(baseURL: string) {\n        this.axios = axios.create({\n            baseURL,\n        });\n\n\n        this.axios.interceptors.request.use(this.setToken);\n        this.axios.interceptors.response.use(f => f, this.checkAuthFailed);\n    }\n\n    private setToken = (config: AxiosRequestConfig) => {\n        const newConfig = {\n            ...config,\n        };\n\n        if (!newConfig.headers) {\n            newConfig.headers = {}\n        }\n\n        newConfig.headers['Authorization'] = `Bearer ${TokenStorage.accessToken}`;\n\n        return newConfig;\n    };\n\n    private checkAuthFailed = (error: AxiosError) => {\n        if (error.response?.status === 401 && !error.config.timeoutErrorMessage) {\n            return this.handleUnAuthorize(error);\n        }\n        if (error.response?.status === 401 && error.config.timeoutErrorMessage) {\n            TokenStorage.clear();\n            window.history.pushState({}, '', '/auth');\n        }\n        return Promise.reject(error);\n    };\n\n    private handleUnAuthorize = async (error: AxiosError) => {\n        const originalRequest = error.config;\n\n        if (this.refreshing) {\n            return new Promise((resolve, reject) => {\n                this.failedRequests.push({ resolve, reject })\n            }).then(token => {\n                originalRequest.headers['Authorization'] = 'Bearer ' + token;\n                return this.axios(originalRequest);\n            }).catch(err => {\n                return Promise.reject(err);\n            })\n        }\n        originalRequest.timeoutErrorMessage = 'true';\n        this.refreshing = true;\n        return new Promise((resolve, reject) => {\n            this.axios.get('/auth/refresh', { params: { refresh: TokenStorage.refreshToken } })\n            .then(({ data }) => {\n                TokenStorage.set({\n                    refreshToken: data.refreshToken,\n                    accessToken: data.accessToken,\n                });\n                delete originalRequest.timeoutErrorMessage;\n\n                this.processFailedRequests(null, TokenStorage.accessToken);\n                resolve(this.axios(originalRequest));\n            })\n            .catch((err) => {\n                this.processFailedRequests(err, null);\n                reject(err);\n            })\n            .then(() => this.refreshing = false)\n        })\n    };\n\n    processFailedRequests = (error: AxiosError | null, token: string | null) => {\n        this.failedRequests.forEach(prom => {\n            if (error) {\n                prom.reject(error);\n            } else if (token) {\n                prom.resolve(token);\n            }\n        });\n\n        this.failedRequests = [];\n    }\n}\n\ninterface FailedRequest {\n    resolve: (token: string) => void;\n    reject: (err: AxiosError) => void;\n}\n\nexport default new BaseApiClient(config.API_URL)\n","export default {\n    API_URL: 'http://dev-api.bimdata.ru/v1'\n};\n","import BaseApiClient from '../helpers/BaseApiClient';\nimport { IUserProfile } from './interfaces';\nimport { SuccessData } from '../helpers/SuccessData';\n\nclass User {\n    fetchProfile = async (): Promise<IUserProfile> => {\n        const result = await BaseApiClient.axios.get<SuccessData<IUserProfile>>('/users/me');\n        return result.data.data;\n    };\n}\n\nexport default new User()\n","import { createModel } from '@rematch/core';\nimport { UserState } from './interfaces';\nimport { IUserProfile } from '../../../api/user/interfaces';\nimport User from '../../../api/user/User';\n\nexport const user = createModel<UserState>(\n  {\n      state: {\n          profile: null\n      },\n      reducers: {\n          setProfile: (state, profile?: IUserProfile) => {\n              return ({\n                  ...state,\n                  profile,\n              });\n          }\n      },\n      effects: dispatch => ({\n          async fetchProfile() {\n              const profile = await User.fetchProfile();\n              dispatch.user.setProfile(profile)\n          }\n      }),\n  }\n);\n","import BaseApiClient from '../helpers/BaseApiClient';\nimport { IAuthToken, ILoginForm } from './interfaces';\nimport { SuccessData } from '../helpers/SuccessData';\n\nclass Auth {\n    login = async (data: ILoginForm): Promise<IAuthToken> => {\n        const result = await BaseApiClient.axios.post<SuccessData<IAuthToken>>('/auth/login', data);\n        return result.data.data;\n    };\n}\n\nexport default new Auth()\n","import { createModel } from '@rematch/core';\nimport { AuthState } from './interfaces';\nimport TokenStorage from '../../../helpers/utils/storage/TokenStorage';\nimport { IAuthToken, ILoginForm } from '../../../api/auth/interfaces';\nimport Auth from '../../../api/auth/Auth';\n\nexport const auth = createModel<AuthState>(\n  {\n      state: {},\n      reducers: {\n          setToken: (state: AuthState, token: IAuthToken): AuthState => {\n              TokenStorage.set(token);\n              return {\n                  ...state,\n                  token\n              }\n          }\n      },\n      effects: dispatch => ({\n          async login(data: ILoginForm) {\n              const token = await Auth.login(data);\n              dispatch.auth.setToken(token);\n          }\n      }),\n  }\n);\n","import { init, RematchRootState } from '@rematch/core'\nimport * as models from './models'\n\nconst store = init({\n    models,\n});\n\nexport default store\n\nexport type Store = typeof store\nexport type Dispatch = typeof store.dispatch\nexport type IRootState = RematchRootState<typeof models>\n","import * as React from 'react';\n\nimport styles from './Form.module.scss';\n\nconst Form: React.FC<IProps> = ({title, className, ...props}) => {\n    return (\n      <form {...props} className={styles.container}>\n          <h2 className={styles.title}>\n              {title}\n          </h2>\n          <div className={className}>\n              {props.children}\n          </div>\n      </form>\n    );\n};\n\ninterface IProps extends React.DetailedHTMLProps<React.FormHTMLAttributes<HTMLFormElement>, HTMLFormElement> {\n    title: string;\n}\n\nexport default Form;\n","import * as React from 'react';\n\nimport styles from './Input.module.scss';\n\nconst Input: React.FC<IProps> = ({ children, label, ...props }) => {\n    return (\n      <div className={styles.input}>\n          <span className={styles.label}>{label}</span>\n          <input {...props} />\n      </div>\n    );\n};\n\ninterface IProps extends React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>{\n    label: string;\n}\n\n\n\nexport default Input;\n","import * as React from 'react';\n\nconst Button: React.FC<React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>> = (props) => {\n    return (\n      <button {...props} className={props.className}>\n          {props.children}\n      </button>\n    );\n};\n\nexport default Button;\n","import * as React from 'react';\nimport { ILoginForm } from '../../api/auth/interfaces';\nimport { useMemo, useState } from 'react';\nimport cx from 'classnames';\nimport Form from '../../components/BasicComponents/Form/Form';\nimport Input from '../../components/BasicComponents/Input/Input';\nimport Button from '../../components/BasicComponents/Button/Button';\n\nimport styles from './LoginForm.module.scss';\n\nconst LoginForm: React.FC<IProps> = ({ onSubmit }) => {\n    const [email, setEmail] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n\n        if (!email || !password) {\n            return;\n        }\n        onSubmit({ email, password });\n    };\n\n    return (\n      <Form onSubmit={handleSubmit} title='LoginForm' className={styles.loginForm}>\n          <Input\n            type='text'\n            label='Email'\n            value={email}\n            className={styles.row}\n            onChange={useMemo(() => e => setEmail(e.target.value), [])}\n          />\n          <Input\n            type='password'\n            label='Password'\n            value={password}\n            className={styles.row}\n            onChange={useMemo(() => e => setPassword(e.target.value), [])}\n          />\n          <Button className={cx(styles.row, styles.submitButton)}>\n              Login\n          </Button>\n      </Form>\n    );\n};\n\ninterface IProps {\n    onSubmit: (form: ILoginForm) => void;\n}\n\nexport default LoginForm;\n","import * as React from 'react';\nimport LoginForm from './LoginForm';\n\nimport styles from './SignIn.module.scss';\nimport { useMemo } from 'react';\nimport { ILoginForm } from '../../api/auth/interfaces';\nimport { connect } from 'react-redux';\nimport { Dispatch, IRootState } from '../../store';\n\nconst SignIn: React.FC<IProps> = ({ login }) => {\n    const handleLogin = useMemo(() => (form: ILoginForm) => {\n        login(form);\n    }, [login]);\n\n    return (\n      <div className={styles.signInPage}>\n          <LoginForm\n            onSubmit={handleLogin}\n          />\n      </div>\n    );\n};\n\ntype connectedProps = ReturnType<typeof mapState> &\n  ReturnType<typeof mapDispatch>\n\ninterface IProps extends connectedProps{\n}\n\n\nconst mapState = (state: IRootState) => ({\n\n});\n\n//TODO issue https://github.com/rematch/rematch/issues/723\nconst mapDispatch = (dispatch: any) =>{\n    const d = dispatch as Dispatch;\n    return ({\n        login: d.auth.login,\n    })\n};\nexport default connect(null, mapDispatch)(SignIn);\n","import * as React from 'react';\nimport { Route, RouteProps, Redirect } from 'react-router-dom';\nimport TokenStorage from '../../helpers/utils/storage/TokenStorage';\n\nconst PrivateRoute: React.FC<RouteProps> = (props) => {\n    if (TokenStorage.accessToken) {\n        return (\n          <Route {...props}>\n              {props.children}\n          </Route>\n        );\n    }\n\n    return <Redirect to='/auth' />;\n};\n\nexport default PrivateRoute;\n","import * as React from 'react';\nimport cx from 'classnames';\n\nimport styles from './StaticForm.module.scss';\n\nconst StaticForm: React.FC<IProps> = (props) => {\n    const isGrid = props.type === 'grid';\n    const isRows = props.type === 'rows';\n\n    return (\n      <div className={props.containerClassName}>\n          <h2 className={styles.title}>\n              {props.title}\n          </h2>\n          <div\n            className={cx(styles.table, {\n                [styles.grid]: isGrid,\n                [styles.rows]: isRows,\n            })}\n          >\n              {props.data.map((item: IStaticFormRow, i: number) => (\n                <React.Fragment key={i}>\n                    <span>{item.label}</span>\n                    {isGrid && (<span>{item.value}</span>)}\n                </React.Fragment>\n              ))}\n          </div>\n      </div>\n    );\n};\n\nStaticForm.defaultProps = {\n    data: [],\n    title: '',\n    type: 'grid',\n};\n\ninterface IProps {\n    type?: GridType;\n    title: string;\n    data: IStaticFormRow[];\n    containerClassName?: string;\n}\n\ntype GridType = 'grid' | 'rows';\n\ninterface IStaticFormRow {\n    label: string;\n    value?: string;\n    render?: (value: string) => React.ComponentType\n}\n\nexport default StaticForm;\n","import * as React from 'react';\nimport StaticForm from '../../components/StaticForm/StaticForm';\n\nimport styles from './Profile.module.scss';\nimport { IRootState } from '../../store';\nimport { useMemo } from 'react';\nimport { connect } from 'react-redux';\n\nconst PROFILE_FIELDS = [\n    {\n        label: 'Имя',\n        field: 'firstName',\n    },\n    {\n        label: 'Фамилия',\n        field: 'lastName',\n    },\n    {\n        label: 'Эл. почта',\n        field: 'email',\n    },\n];\n\nconst Profile: React.FC<IProps> = (props) => {\n\n    const profileData = useMemo(() => PROFILE_FIELDS.map(f => ({\n        ...f,\n        value: props.profile[f.field],\n    })), [props.profile]);\n\n    return (\n      <div className={styles.container}>\n          <StaticForm title='Основная информация' data={profileData} />\n          <StaticForm title='Проекты' data={testProjectsData} type='rows' containerClassName={styles.projects}/>\n      </div>\n    );\n};\n\nconst testProjectsData = [\n    {\n        label: 'Название проекта 1',\n    },\n    {\n        label: 'Название проекта 2',\n    },\n    {\n        label: 'Название проекта 3',\n    },\n];\ntype connectedProps = ReturnType<typeof mapState>;\n\nconst mapState = (state: IRootState) => ({\n    profile: state.user.profile\n});\ninterface IProps extends connectedProps{\n\n}\n\nexport default connect(mapState)(Profile);\n","import * as React from 'react';\nimport styles from './Navigation.module.scss';\nimport { NavLink } from 'react-router-dom';\n\nconst Navigation: React.FC<IProps> = (props) => (\n  <div className={styles.navigation}>\n      {props.links.map(((link: NavigationLink) => (\n        <NavLink to={link.url} activeClassName={props.chosenClassName} key={link.url}>\n            <span>{link.label}</span>\n        </NavLink>\n      )))}\n  </div>\n);\n\nNavigation.defaultProps = {\n    links: [],\n    chosenClassName: '',\n};\n\ninterface IProps {\n    chosenClassName: string;\n    links: NavigationLink[];\n}\n\ninterface NavigationLink {\n    url: string;\n    label: string;\n    chosen?: boolean;\n}\n\nexport default Navigation;\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport logo from '../../components/icons/logo.svg';\nimport styles from './LeftMenu.module.scss';\nimport Navigation from '../../components/Navigation/Navigation';\nimport { IRootState } from '../../store';\nimport { connect } from 'react-redux';\n\nconst LeftMenu: React.FC<IProps> = ({ profile }) => {\n\n    return (\n      <div className={styles.menu}>\n          <div className={styles.topPart}>\n              <Link to={'/'}>\n                  <div className={styles.logoContainer}>\n                      <img src={logo} alt=\"logo\" />\n                      <span>BIMDATA</span>\n                  </div>\n              </Link>\n\n\n              <div className={styles.userInfo}>\n                <span className={styles.name}>{profile.firstName} {profile.lastName}</span>\n                <span className={styles.email}>{profile.email}</span>\n              </div>\n          </div>\n\n          <Navigation chosenClassName={styles.chosen} links={links}/>\n      </div>\n    );\n};\n\nconst links = [\n    {\n        url: '/profile',\n        label: 'Профиль'\n    },\n    {\n        url: '/appeal',\n        label: 'Обращения'\n    },\n    {\n        url: '/security',\n        label: 'Безопасность'\n    },\n];\n\ntype connectedProps = ReturnType<typeof mapState>;\n\nconst mapState = (state: IRootState) => ({\n    profile: state.user.profile,\n});\n\ninterface IProps extends connectedProps{\n}\n\nexport default connect(mapState)(LeftMenu);\n","import * as React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Profile from '../Profile/Profile';\nimport LeftMenu from '../LeftMenu/LeftMenu';\n\nimport styles from './AuthPages.module.scss';\nimport { connect } from 'react-redux';\nimport { IRootState } from '../../store';\nimport { useEffect } from 'react';\n\nconst AuthPages: React.FC<IProps> = (props) => {\n    useEffect(() => {\n        props.fetchProfile();\n    }, []);\n\n    if (!props.profile) {\n        return (\n          <div>\n              Loading...\n          </div>\n        );\n    }\n\n    return (\n      <div className={styles.authPage}>\n          <LeftMenu />\n\n          <div className={styles.content}>\n              <Switch>\n                  <Route path='/profile'>\n                      <Profile />\n                  </Route>\n\n                  <Redirect exact to='/profile' from='/' />\n\n                  <Route path='*'>\n                      Not Found\n                  </Route>\n\n              </Switch>\n          </div>\n      </div>\n    );\n};\n\n\ntype connectedProps = ReturnType<typeof mapState> &\n  ReturnType<typeof mapDispatch>\n\nconst mapDispatch = (dispatch: any) => ({\n    fetchProfile: dispatch.user.fetchProfile\n});\n\nconst mapState = (state: IRootState) => ({\n    profile: state.user.profile\n});\n\ninterface IProps extends connectedProps{\n}\n\nexport default connect(mapState, mapDispatch)(AuthPages);\n","import * as React from 'react';\nimport { Route, RouteProps, Redirect } from 'react-router-dom';\nimport TokenStorage from '../../helpers/utils/storage/TokenStorage';\n\nconst UnAuthorizeRoute: React.FC<RouteProps> = (props) => {\n    if (!TokenStorage.accessToken) {\n        return (\n          <Route {...props}>\n              {props.children}\n          </Route>\n        );\n    }\n\n    return <Redirect to='/' />;\n};\n\nexport default UnAuthorizeRoute;\n","import * as React from 'react';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport SignIn from '../SignIn/SignIn';\nimport PrivateRoute from '../Routes/PrivateRoute';\nimport AuthPages from '../Routes/AuthPages';\nimport UnAuthorizeRoute from '../Routes/UnAuthorizeRoute';\nimport { connect } from 'react-redux';\nimport { IRootState } from '../../store';\n\nconst Main: React.FC = () => {\n    return (\n      <Router>\n          <Switch>\n              <UnAuthorizeRoute path='/auth'>\n                  <SignIn/>\n              </UnAuthorizeRoute>\n\n              <PrivateRoute path='/'>\n                  <AuthPages/>\n              </PrivateRoute>\n          </Switch>\n      </Router>\n    );\n};\n\nexport default connect(({ auth }: IRootState) => ({token: auth.token}))(Main);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport Main from './containers/Main/Main';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n      <Main />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}